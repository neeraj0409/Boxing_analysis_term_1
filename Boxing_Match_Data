{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"https://github.com/insaid2018/Term-1/blob/master/Images/INSAID_Full%20Logo.png?raw=true\" width=\"240\" height=\"360\" />\n",
    "<font color='Red'>         __Exploratory Data Analysis For Boxing Matches Data__     </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Table of Contents\n",
    "\n",
    "1. [Problem Statement](#section1)<br>\n",
    "2. [Data Loading and Description](#section2)\n",
    "3. [Data Profiling](#section3)\n",
    "    - 3.1 [Understanding the Dataset](#section301)<br/>\n",
    "    - 3.2 [Pre Profiling](#section302)<br/>\n",
    "    - 3.3 [Preprocessing](#section303)<br/>\n",
    "    - 3.4 [Post Profiling](#section304)<br/>\n",
    "4. [Questions](#section4)\n",
    "    - 4.1 [How much age of a player impacts the performace of player interms of winning ?](#section401)<br/>\n",
    "    - 4.2 [How much height of a player impacts the performace of player interms of winning ?](#section402)<br/>\n",
    "    - 4.3 [How much weight of a player impacts the performace of player interms of winning ??](#section403)<br/>\n",
    "    - 4.4 [Which decisions were majorly taken in the matches?](#section404)<br/>\n",
    "    - 4.5 [Which stances had more draw compared to other?](#section405)<br/>\n",
    "\n",
    "\n",
    "5. [Conclusions](#section6)<br/>  \n",
    "\n",
    "\n",
    "\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Problem Statement"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The notebooks explores the basic use of __Pandas__ and will cover the basic commands of __Exploratory Data Analysis(EDA)__ which includes __cleaning__, __munging__, __combining__, __reshaping__, __slicing__, __dicing__, and __transforming data__ for analysis purpose.\n",
    "\n",
    "* __Exploratory Data Analysis__ <br/>\n",
    "Understand the data by EDA and derive simple models with Pandas as baseline.\n",
    "EDA ia a critical and first step in analyzing the data and we do this for below reasons :\n",
    "    - Finding patterns in Data\n",
    "    - Determining relationships in Data\n",
    "    - Checking of assumptions\n",
    "    - Preliminary selection of appropriate models\n",
    "    - Detection of mistakes \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Data Loading and Description\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/jpeg": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 101,
     "metadata": {
      "image/jpeg": {
       "width": 500
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from IPython.display import Image\n",
    "Image(filename= 'box.jpg',width= 500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " The dataset consists of the information about Top 1000 movies release in years from 2006 to 2016. Various variables present in the dataset includes:- \n",
    "                        <font color='green'> \n",
    "    __'age_A', 'age_B', 'height_A', 'height_B', 'reach_A', 'reach_B',\n",
    "       'stance_A', 'stance_B', 'weight_A', 'weight_B', 'won_A', 'won_B','lost_A', 'lost_B', 'drawn_A', 'drawn_B', 'kos_A', 'kos_B', 'result',\n",
    "       'decision', 'judge1_A', 'judge1_B', 'judge2_A', 'judge2_B', 'judge3_A',\n",
    "       'judge3_B'.__ </font>\n",
    "\n",
    "- The dataset comprises of __1000 observations of 12 columns__. Below is a table showing names of all the columns and their description."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "| Column Name   | Description                                               |\n",
    "| ------------- |:-------------                                            :| \n",
    "| age_A          | Age of the 1st player                                       | \n",
    "| age_B          | Age of the 2nd player                         |  \n",
    "| height_A       | Height of the 1st player                                           | \n",
    "| height_B       | Height of the 2nd player                                          |   \n",
    "| reach_A        | Reach of the  1st player                                         |\n",
    "| reach_B        | Reach of the  2nd player                                          |\n",
    "| stance_A       | stance for the 1st player\n",
    "| stance_B       | stance for the 2nd player\n",
    "| weight_A       | weight of the  1st player                                          |\n",
    "| weight_B       | weight of the  2nd player                                           |\n",
    "| won_A          | 1st player declared as winner                                            |\n",
    "| won_A          | 2nd player declared as winner   \n",
    "| lost_A         | 1st player declared as lost\n",
    "| lost_B         | 2nd player declared as lost\n",
    "| drawn_A        | Match declared as drawn for 1st player\n",
    "| drawn_B        | Match declared as drawn for 2nd player\n",
    "| kos_A          | various results in favour of 1st player\n",
    "| kos_B          | various results in favour of 2nd player\n",
    "| result         | result declared for 1st and 2nd player\n",
    "| decision       | Various decions declared in favour of 1st and 2nd player\n",
    "| judge1_A       | 1st Judge for the 1st player\n",
    "| judge1_B       | 1st Judge for the 2nd player\n",
    "| judge2_A       | 2nd Judge for the 1st player\n",
    "| judge2_B       | 2nd Judge for the 2nd player\n",
    "| judge3_A       | 3rd Judge for the 1st player\n",
    "| judge3_B       | 3rd Judge for the 2nd player"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Assumptions:\n",
    "        1. Height and Weight of the player mentioned in the dataset are in CM and Pounds.\n",
    "        2. Posibility of players playing against each other, having diffrent stances, is nil."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Importing packages     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np                           # Implemennts milti-dimensional array and matrice                                              # For data manipulation and analysis\n",
    "import pandas as pd                          # For data manipulation and analysis\n",
    "import pandas_profiling\n",
    "import matplotlib.pyplot as plt              # Plotting library for Python programming language and it's numerical mathematics extension NumPy\n",
    "import seaborn as sns                        # Provides a high level interface for drawing attractive and informative statistical graphics\n",
    "%matplotlib inline\n",
    "sns.set()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Importing the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "box_full_data = pd.read_csv('https://raw.githubusercontent.com/Ashutosh902/Term-1/master/Data/Projects/boxing_matches.csv')\n",
    "box_data_copy = box_full_data.copy(deep = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Data Profiling\n",
    "- In the upcoming sections we will first __understand our dataset__ using various pandas functionalities.\n",
    "- Then with the help of __pandas profiling__ we will find which columns of our dataset need preprocessing.\n",
    "- In __preprocessing__ we will deal with erronous and missing values of columns. \n",
    "- Again we will do __pandas profiling__ to see how preprocessing have transformed our dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.1 Understanding the Dataset\n",
    "To gain insights from data we must look into each aspect of it very carefully. We will start with observing few rows and columns of data both from the starting and from the end\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(387427, 26)"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_full_data.shape                     #Finding total number of rows and columns in dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age_A', 'age_B', 'height_A', 'height_B', 'reach_A', 'reach_B',\n",
       "       'stance_A', 'stance_B', 'weight_A', 'weight_B', 'won_A', 'won_B',\n",
       "       'lost_A', 'lost_B', 'drawn_A', 'drawn_B', 'kos_A', 'kos_B', 'result',\n",
       "       'decision', 'judge1_A', 'judge1_B', 'judge2_A', 'judge2_B', 'judge3_A',\n",
       "       'judge3_B'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_full_data.columns                   #Printing all 26 columns present in the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_A</th>\n",
       "      <th>age_B</th>\n",
       "      <th>height_A</th>\n",
       "      <th>height_B</th>\n",
       "      <th>reach_A</th>\n",
       "      <th>reach_B</th>\n",
       "      <th>stance_A</th>\n",
       "      <th>stance_B</th>\n",
       "      <th>weight_A</th>\n",
       "      <th>weight_B</th>\n",
       "      <th>...</th>\n",
       "      <th>kos_A</th>\n",
       "      <th>kos_B</th>\n",
       "      <th>result</th>\n",
       "      <th>decision</th>\n",
       "      <th>judge1_A</th>\n",
       "      <th>judge1_B</th>\n",
       "      <th>judge2_A</th>\n",
       "      <th>judge2_B</th>\n",
       "      <th>judge3_A</th>\n",
       "      <th>judge3_B</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>35.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>178.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>160.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>...</td>\n",
       "      <td>33</td>\n",
       "      <td>34.0</td>\n",
       "      <td>draw</td>\n",
       "      <td>SD</td>\n",
       "      <td>110.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>113.0</td>\n",
       "      <td>114.0</td>\n",
       "      <td>114.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>164.0</td>\n",
       "      <td>164.0</td>\n",
       "      <td>...</td>\n",
       "      <td>34</td>\n",
       "      <td>32.0</td>\n",
       "      <td>win_A</td>\n",
       "      <td>UD</td>\n",
       "      <td>120.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>108.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>176.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>179.0</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>154.0</td>\n",
       "      <td>154.0</td>\n",
       "      <td>...</td>\n",
       "      <td>13</td>\n",
       "      <td>33.0</td>\n",
       "      <td>win_B</td>\n",
       "      <td>KO</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>25.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>155.0</td>\n",
       "      <td>155.0</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>19.0</td>\n",
       "      <td>win_A</td>\n",
       "      <td>KO</td>\n",
       "      <td>47.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>25.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>orthodox</td>\n",
       "      <td>155.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>33.0</td>\n",
       "      <td>win_A</td>\n",
       "      <td>UD</td>\n",
       "      <td>118.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>119.0</td>\n",
       "      <td>109.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>111.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   age_A  age_B  height_A  height_B  reach_A  reach_B  stance_A  stance_B  \\\n",
       "0   35.0   27.0     179.0     175.0    178.0    179.0  orthodox  orthodox   \n",
       "1   26.0   31.0     175.0     185.0    179.0    185.0  orthodox  orthodox   \n",
       "2   28.0   26.0     176.0     175.0      NaN    179.0  orthodox  orthodox   \n",
       "3   25.0   29.0     175.0     174.0    179.0    180.0  orthodox  orthodox   \n",
       "4   25.0   35.0     175.0     170.0    179.0    170.0  orthodox  orthodox   \n",
       "\n",
       "   weight_A  weight_B   ...     kos_A  kos_B  result  decision  judge1_A  \\\n",
       "0     160.0     160.0   ...        33   34.0    draw        SD     110.0   \n",
       "1     164.0     164.0   ...        34   32.0   win_A        UD     120.0   \n",
       "2     154.0     154.0   ...        13   33.0   win_B        KO       NaN   \n",
       "3     155.0     155.0   ...        32   19.0   win_A        KO      47.0   \n",
       "4     155.0       NaN   ...        32   33.0   win_A        UD     118.0   \n",
       "\n",
       "   judge1_B  judge2_A  judge2_B judge3_A judge3_B  \n",
       "0     118.0     115.0     113.0    114.0    114.0  \n",
       "1     108.0     120.0     108.0    120.0    108.0  \n",
       "2       NaN       NaN       NaN      NaN      NaN  \n",
       "3      48.0      49.0      46.0     48.0     47.0  \n",
       "4     110.0     119.0     109.0    117.0    111.0  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_full_data.head()                   #Printing first 5 rows from the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 387427 entries, 0 to 387426\n",
      "Data columns (total 26 columns):\n",
      "age_A       352888 non-null float64\n",
      "age_B       257935 non-null float64\n",
      "height_A    249246 non-null float64\n",
      "height_B    134640 non-null float64\n",
      "reach_A     112342 non-null float64\n",
      "reach_B     37873 non-null float64\n",
      "stance_A    231009 non-null object\n",
      "stance_B    231009 non-null object\n",
      "weight_A    135573 non-null float64\n",
      "weight_B    130358 non-null float64\n",
      "won_A       387427 non-null int64\n",
      "won_B       387427 non-null int64\n",
      "lost_A      387427 non-null int64\n",
      "lost_B      387427 non-null int64\n",
      "drawn_A     387427 non-null int64\n",
      "drawn_B     387427 non-null int64\n",
      "kos_A       387427 non-null int64\n",
      "kos_B       387348 non-null float64\n",
      "result      387427 non-null object\n",
      "decision    387427 non-null object\n",
      "judge1_A    52248 non-null float64\n",
      "judge1_B    52060 non-null float64\n",
      "judge2_A    70371 non-null float64\n",
      "judge2_B    70032 non-null float64\n",
      "judge3_A    61231 non-null float64\n",
      "judge3_B    61023 non-null float64\n",
      "dtypes: float64(15), int64(7), object(4)\n",
      "memory usage: 76.9+ MB\n"
     ]
    }
   ],
   "source": [
    "box_full_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_A</th>\n",
       "      <th>age_B</th>\n",
       "      <th>height_A</th>\n",
       "      <th>height_B</th>\n",
       "      <th>reach_A</th>\n",
       "      <th>reach_B</th>\n",
       "      <th>weight_A</th>\n",
       "      <th>weight_B</th>\n",
       "      <th>won_A</th>\n",
       "      <th>won_B</th>\n",
       "      <th>...</th>\n",
       "      <th>drawn_A</th>\n",
       "      <th>drawn_B</th>\n",
       "      <th>kos_A</th>\n",
       "      <th>kos_B</th>\n",
       "      <th>judge1_A</th>\n",
       "      <th>judge1_B</th>\n",
       "      <th>judge2_A</th>\n",
       "      <th>judge2_B</th>\n",
       "      <th>judge3_A</th>\n",
       "      <th>judge3_B</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>352888.000000</td>\n",
       "      <td>257935.000000</td>\n",
       "      <td>249246.000000</td>\n",
       "      <td>134640.000000</td>\n",
       "      <td>112342.000000</td>\n",
       "      <td>37873.000000</td>\n",
       "      <td>135573.000000</td>\n",
       "      <td>130358.000000</td>\n",
       "      <td>387427.000000</td>\n",
       "      <td>387427.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>387427.000000</td>\n",
       "      <td>387427.000000</td>\n",
       "      <td>387427.000000</td>\n",
       "      <td>387348.000000</td>\n",
       "      <td>52248.000000</td>\n",
       "      <td>52060.000000</td>\n",
       "      <td>70371.000000</td>\n",
       "      <td>70032.000000</td>\n",
       "      <td>61231.000000</td>\n",
       "      <td>61023.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>24.416041</td>\n",
       "      <td>26.583345</td>\n",
       "      <td>172.786657</td>\n",
       "      <td>172.882657</td>\n",
       "      <td>178.848605</td>\n",
       "      <td>179.001030</td>\n",
       "      <td>146.340636</td>\n",
       "      <td>147.089484</td>\n",
       "      <td>23.108438</td>\n",
       "      <td>15.159080</td>\n",
       "      <td>...</td>\n",
       "      <td>2.826481</td>\n",
       "      <td>2.636375</td>\n",
       "      <td>10.338887</td>\n",
       "      <td>6.234735</td>\n",
       "      <td>62.778901</td>\n",
       "      <td>59.509700</td>\n",
       "      <td>59.560941</td>\n",
       "      <td>56.570411</td>\n",
       "      <td>60.784276</td>\n",
       "      <td>57.995215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.523590</td>\n",
       "      <td>11.823224</td>\n",
       "      <td>9.130127</td>\n",
       "      <td>9.430631</td>\n",
       "      <td>12.002404</td>\n",
       "      <td>14.867537</td>\n",
       "      <td>30.240142</td>\n",
       "      <td>30.624890</td>\n",
       "      <td>27.629901</td>\n",
       "      <td>19.938137</td>\n",
       "      <td>...</td>\n",
       "      <td>5.584610</td>\n",
       "      <td>5.027003</td>\n",
       "      <td>12.392049</td>\n",
       "      <td>8.750690</td>\n",
       "      <td>30.337580</td>\n",
       "      <td>29.285058</td>\n",
       "      <td>31.021367</td>\n",
       "      <td>30.260935</td>\n",
       "      <td>31.910461</td>\n",
       "      <td>31.170590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-74.000000</td>\n",
       "      <td>-74.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>21.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>166.000000</td>\n",
       "      <td>167.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>171.000000</td>\n",
       "      <td>125.000000</td>\n",
       "      <td>126.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>36.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>24.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>173.000000</td>\n",
       "      <td>173.000000</td>\n",
       "      <td>178.000000</td>\n",
       "      <td>178.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>54.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>178.000000</td>\n",
       "      <td>179.000000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>160.000000</td>\n",
       "      <td>160.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>78.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1818.000000</td>\n",
       "      <td>2016.000000</td>\n",
       "      <td>255.000000</td>\n",
       "      <td>255.000000</td>\n",
       "      <td>456.000000</td>\n",
       "      <td>456.000000</td>\n",
       "      <td>363.000000</td>\n",
       "      <td>450.000000</td>\n",
       "      <td>332.000000</td>\n",
       "      <td>251.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>131.000000</td>\n",
       "      <td>128.000000</td>\n",
       "      <td>540.000000</td>\n",
       "      <td>291.000000</td>\n",
       "      <td>299.000000</td>\n",
       "      <td>294.000000</td>\n",
       "      <td>300.000000</td>\n",
       "      <td>295.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               age_A          age_B       height_A       height_B  \\\n",
       "count  352888.000000  257935.000000  249246.000000  134640.000000   \n",
       "mean       24.416041      26.583345     172.786657     172.882657   \n",
       "std         6.523590      11.823224       9.130127       9.430631   \n",
       "min       -74.000000     -74.000000       2.000000      15.000000   \n",
       "25%        21.000000      23.000000     166.000000     167.000000   \n",
       "50%        24.000000      26.000000     173.000000     173.000000   \n",
       "75%        27.000000      30.000000     178.000000     179.000000   \n",
       "max      1818.000000    2016.000000     255.000000     255.000000   \n",
       "\n",
       "             reach_A       reach_B       weight_A       weight_B  \\\n",
       "count  112342.000000  37873.000000  135573.000000  130358.000000   \n",
       "mean      178.848605    179.001030     146.340636     147.089484   \n",
       "std        12.002404     14.867537      30.240142      30.624890   \n",
       "min         5.000000      1.000000      10.000000       2.000000   \n",
       "25%       170.000000    171.000000     125.000000     126.000000   \n",
       "50%       178.000000    178.000000     140.000000     140.000000   \n",
       "75%       185.000000    185.000000     160.000000     160.000000   \n",
       "max       456.000000    456.000000     363.000000     450.000000   \n",
       "\n",
       "               won_A          won_B      ...             drawn_A  \\\n",
       "count  387427.000000  387427.000000      ...       387427.000000   \n",
       "mean       23.108438      15.159080      ...            2.826481   \n",
       "std        27.629901      19.938137      ...            5.584610   \n",
       "min         0.000000       0.000000      ...            0.000000   \n",
       "25%         5.000000       2.000000      ...            0.000000   \n",
       "50%        14.000000       8.000000      ...            1.000000   \n",
       "75%        31.000000      21.000000      ...            3.000000   \n",
       "max       332.000000     251.000000      ...           77.000000   \n",
       "\n",
       "             drawn_B          kos_A          kos_B      judge1_A  \\\n",
       "count  387427.000000  387427.000000  387348.000000  52248.000000   \n",
       "mean        2.636375      10.338887       6.234735     62.778901   \n",
       "std         5.027003      12.392049       8.750690     30.337580   \n",
       "min         0.000000       0.000000       0.000000      0.000000   \n",
       "25%         0.000000       2.000000       0.000000     39.000000   \n",
       "50%         1.000000       6.000000       3.000000     59.000000   \n",
       "75%         3.000000      14.000000       9.000000     80.000000   \n",
       "max        76.000000     131.000000     128.000000    540.000000   \n",
       "\n",
       "           judge1_B      judge2_A      judge2_B      judge3_A      judge3_B  \n",
       "count  52060.000000  70371.000000  70032.000000  61231.000000  61023.000000  \n",
       "mean      59.509700     59.560941     56.570411     60.784276     57.995215  \n",
       "std       29.285058     31.021367     30.260935     31.910461     31.170590  \n",
       "min        1.000000      0.000000      0.000000      0.000000      1.000000  \n",
       "25%       37.000000     39.000000     36.000000     39.000000     36.000000  \n",
       "50%       54.000000     58.000000     54.000000     58.000000     54.000000  \n",
       "75%       79.000000     80.000000     75.000000     80.000000     78.000000  \n",
       "max      291.000000    299.000000    294.000000    300.000000    295.000000  \n",
       "\n",
       "[8 rows x 22 columns]"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_full_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age_A        34539\n",
       "age_B       129492\n",
       "height_A    138181\n",
       "height_B    252787\n",
       "reach_A     275085\n",
       "reach_B     349554\n",
       "stance_A    156418\n",
       "stance_B    156418\n",
       "weight_A    251854\n",
       "weight_B    257069\n",
       "won_A            0\n",
       "won_B            0\n",
       "lost_A           0\n",
       "lost_B           0\n",
       "drawn_A          0\n",
       "drawn_B          0\n",
       "kos_A            0\n",
       "kos_B           79\n",
       "result           0\n",
       "decision         0\n",
       "judge1_A    335179\n",
       "judge1_B    335367\n",
       "judge2_A    317056\n",
       "judge2_B    317395\n",
       "judge3_A    326196\n",
       "judge3_B    326404\n",
       "dtype: int64"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_full_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above output we can see that __'judge1_A', 'judge1_B', 'judge2_A', 'judge2_B', 'judge3_A',\n",
    "       'judge3_B'__ columns contains  __null values__ for most of their rows. We will see how to deal with them."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.2 Pre Profiling\n",
    "- By pandas profiling, an __interactive HTML report__ gets generated which contins all the information about the columns of the dataset, like the __counts and type__ of each _column_. Detailed information about each column, __coorelation between different columns__ and a sample of dataset.<br/>\n",
    "- It gives us __visual interpretation__ of each column in the data.\n",
    "- _Spread of the data_ can be better understood by the distribution plot. \n",
    "- _Grannular level_ analysis of each column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "profile = pandas_profiling.ProfileReport(box_full_data)\n",
    "profile.to_file(outputfile=\"box_data_before_preprocessing.html\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- In the Dataset info, Total __Missing(%)__ = __20.6%__ \n",
    "- Number of __variables__ = __26__ "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.3 Preprocessing\n",
    "- Finding correlation of the columns,having missing values, with other columns by removing all the __rows__ in the data set having Null/NaN values.<br/>\n",
    "\n",
    "<font color='green'> __After the analysis, using the correlated columns to deal with missing values of respective colums:__ </font>\n",
    "- Dealing with missing values<br/>\n",
    "        \n",
    "        __ Refer DATA CLEANING CODE.IPYNB __ \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "__Fetching data from DATA CLEANING CODE.IPYNB__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "# removing null data in age_columns\n",
    "box_new_data = pd.read_csv('box_data_ext.csv')\n",
    "box_new_data.drop(['Unnamed: 0','Unnamed: 0.1'], axis =1,inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 387427 entries, 0 to 387426\n",
      "Data columns (total 18 columns):\n",
      "age_A       387427 non-null float64\n",
      "age_B       387427 non-null float64\n",
      "height_A    387426 non-null float64\n",
      "height_B    387426 non-null float64\n",
      "stance_A    387427 non-null object\n",
      "stance_B    387426 non-null object\n",
      "weight_A    387427 non-null float64\n",
      "weight_B    387426 non-null float64\n",
      "won_A       387427 non-null int64\n",
      "won_B       387427 non-null int64\n",
      "lost_A      387427 non-null int64\n",
      "lost_B      387427 non-null int64\n",
      "drawn_A     387427 non-null int64\n",
      "drawn_B     387427 non-null int64\n",
      "kos_A       387427 non-null int64\n",
      "kos_B       387348 non-null float64\n",
      "result      387427 non-null object\n",
      "decision    387427 non-null object\n",
      "dtypes: float64(7), int64(7), object(4)\n",
      "memory usage: 53.2+ MB\n"
     ]
    }
   ],
   "source": [
    "box_new_data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I dropped __'judge1_A', 'judge1_B', 'judge2_A', 'judge2_B', 'judge3_A',\n",
    "       'judge3_B'__ columns from the dataset since more than 90% rows for these cols were null."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here, we have done Pandas Profiling before preprocessing our dataset, so we have named the html file as __movie_data_before_preprocessing.html__. Take a look at the file and see what useful insight you can develop from it. <br/>\n",
    "Now we will process our data to better understand it."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.4 Post Pandas Profiling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas_profiling\n",
    "profile = pandas_profiling.ProfileReport(box_new_data)\n",
    "profile.to_file(outputfile=\"box_data_after_preprocessing.html\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we have preprocessed the data, now the dataset doesnot contain missing values. So, the pandas profiling report which we have generated after preprocessing will give us more beneficial insights. You can compare the two reports, i.e __box_after_preprocessing.html__ and titanic_before_preprocessing.html.<br/>\n",
    "In box_after_preprocessing.html report, observations:\n",
    "- In the Dataset info, Total __Missing(%)__ = __0.0%__ \n",
    "- Number of __variables__ = __18__ "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. Questions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.1 How much age of a player impacts the performace of player interms of winning ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Total Number Of Movies')"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "box_age = box_new_data.groupby('result')[['age_A','age_B']].mean().plot.bar(figsize = (10,3))\n",
    "box_age.set_xlabel('Years')\n",
    "box_age.set_ylabel('Total Number Of Movies')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A&lt;B</th>\n",
       "      <th>A&gt;B</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>win_A</td>\n",
       "      <td>win_B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>241163</td>\n",
       "      <td>241163</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      A<B     A>B\n",
       "0   win_A   win_B\n",
       "1  241163  241163"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_PA = 0\n",
    "count_NA = 0\n",
    "count_PB = 0\n",
    "count_NB = 0\n",
    "for i in box_new_data.index:\n",
    "    if box_new_data.loc[i,'result']== 'win_A':\n",
    "        if box_new_data.loc[i,'age_A'] < box_new_data.loc[i,'age_B']:\n",
    "            count_PA += 1\n",
    "        else:\n",
    "            count_NA += 1\n",
    "    else:\n",
    "        if box_new_data.loc[i,'age_A'] > box_new_data.loc[i,'age_B']:\n",
    "            count_PB += 1\n",
    "        else:\n",
    "            count_NB += 1\n",
    "box_violin =pd.DataFrame({'A<B':['win_A',count_PA], 'A>B':['win_B',count_PA]})\n",
    "box_violin"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2c22df94278>"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "box_violin =pd.DataFrame({'A<B':[count_PA,count_NB], 'A>B':[count_PB,count_NA]}, index=['win_A','win_B'])\n",
    "box_violin.plot.bar(stacked= True, figsize = (4,4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So based on the above plot we can clearly see that most of the times when player A is winning their age is more than player B's age and vice versa. so we can conclude that age is the determining factor in the boxing match to win. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.2 How much height of a player impacts the performace of player interms of winning ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### VisulaizingEffect of Height on win in boxing match"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,0,'Years')"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "box_height = box_new_data.groupby('result')[['height_A','height_B']].mean().plot.bar(figsize = (12,3))\n",
    "box_height.set_xlabel('Years')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above graph plot we can see that more height has got a mojority in the winning factor decision"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.3 How much weight of a player impacts the performace of player interms of winning ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,0,'Years')"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "box_weight = box_new_data.groupby('result')[['weight_A','weight_B']].mean().plot.bar(figsize = (12,3))\n",
    "box_weight.set_xlabel('Years')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weight_A</th>\n",
       "      <th>weight_B</th>\n",
       "      <th>age_A</th>\n",
       "      <th>age_B</th>\n",
       "      <th>height_A</th>\n",
       "      <th>height_B</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>result</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>draw</th>\n",
       "      <td>144.513281</td>\n",
       "      <td>145.273414</td>\n",
       "      <td>23.937066</td>\n",
       "      <td>24.220693</td>\n",
       "      <td>171.524081</td>\n",
       "      <td>171.160786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>win_A</th>\n",
       "      <td>146.093676</td>\n",
       "      <td>147.127691</td>\n",
       "      <td>24.276232</td>\n",
       "      <td>26.218749</td>\n",
       "      <td>173.264785</td>\n",
       "      <td>172.225113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>win_B</th>\n",
       "      <td>148.264527</td>\n",
       "      <td>147.386130</td>\n",
       "      <td>25.712860</td>\n",
       "      <td>24.506220</td>\n",
       "      <td>171.791848</td>\n",
       "      <td>172.616163</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          weight_A    weight_B      age_A      age_B    height_A    height_B\n",
       "result                                                                      \n",
       "draw    144.513281  145.273414  23.937066  24.220693  171.524081  171.160786\n",
       "win_A   146.093676  147.127691  24.276232  26.218749  173.264785  172.225113\n",
       "win_B   148.264527  147.386130  25.712860  24.506220  171.791848  172.616163"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_new_data.groupby('result')[['weight_A','weight_B','age_A','age_B','height_A','height_B']].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.4 Which decisions were majorly taken in the matches?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2c2255d9978>"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x550 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "box_new_data.groupby('decision').size().plot.bar()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above plot shows the graph plot for the decions being taken while the boxing matches played ."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.5 Which stances had more draw compared to other?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2c2215deeb8>"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x550 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "box_new_data.groupby(['stance_A','stance_B','result'])['result'].count().plot.bar()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Probabailty of a match getting draw is more when player opt for south paw style compared to orthodox"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. Conclusion \n",
    "\n",
    "- With the help of this notebook we learnt how exploratory data analysis can be carried out using Pandas plotting.\n",
    "- Also we have seen making use of packages like __matplotlib and seaborn__ to develop better insights about the data.<br/>\n",
    "- We have also seen how __preproceesing__ helps in dealing with _missing_ values and irregualities present in the data. We also learnt how to _create new features_ which will in turn help us to better predict the survival. \n",
    "- We also make use of __pandas profiling__ feature to generate an html report containing all the information of the various features present in the dataset.\n",
    "- We have seen the impact of columns like _age,height and weight_ to determine winning trend of player\n",
    "- There could be other factors which are affecting footfall in theaters, beacuse:\n",
    "          1. Age, Weight and Height of player as compared with his opponent can help in guessing the winner.\n",
    "          2. Result of most of the matches, were decided based on POINTS DECISION.\n",
    "          3. Probabailty of a match getting draw is more when player opt for south paw style compared to orthodox"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
